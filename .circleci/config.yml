version: 2.1

jobs:
  unit-tests:
    docker:
      - image: gsornsen/python-ci-cd-container:latest
    steps:
      - checkout
      - restore_cache:
          key: reqs-{{ checksum "requirements.txt" }}-{{ checksum "requirements-dev.txt" }}
      - run:
          name: Run unit tests
          command: |
            python3.9 -m pip install --editable .[test]
            python3.9 -m tox
            python3.9 -m flake8 .
            bash <(curl -Ls https://coverage.codacy.com/get.sh) report -r coverage.xml
      - save_cache:
          key: reqs-{{ checksum "requirements.txt" }}-{{ checksum "requirements-dev.txt" }}
          paths:
            - "venv"
            - ".tox"
  build-wheel:
    docker:
      - image: gsornsen/python-ci-cd-container:latest
    steps:
      - checkout
      - restore_cache:
          keys:
            - reqs-{{ checksum "requirements.txt" }}-{{ checksum "requirements-dev.txt" }}
      - restore_cache:
          keys:
            - wheel-{{ .Branch }}-{{ .Revision }}
      - run:
          name: Build python wheel
          command: |
            python3.9 -m pip install build
            python3.9 -m build
      - save_cache:
          key: wheel-{{ .Branch }}-{{ .Revision }}
          paths:
            - "build"
            - "dist"
  deploy-wheel:
    docker:
      - image: gsornsen/python-ci-cd-container:latest
    steps:
      - checkout
      - restore_cache:
          keys:
            - reqs-{{ checksum "requirements.txt" }}-{{ checksum "requirements-dev.txt" }}
      - restore_cache:
          keys:
            - wheel-{{ .Branch }}-{{ .Revision }}
      - run:
          name: Create .pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = __token__" >> ~/.pypirc
            echo -e "password = $PYPI_TOKEN" >> ~/.pypirc
      - run:
          name: Deploy to PyPi
          command: make upload

workflows:
  main:
    jobs:
      - unit-tests
      - build-wheel:
          requires:
            - unit-tests
      - deploy-wheel:
          requires:
            - build-wheel
          filters:
            branches:
                only:
                  - main
